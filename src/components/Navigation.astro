---
import MenuIcon from "./MenuIcon.astro";
import { Icons } from "../components/Icons.jsx";

const NAVIGATION_LINKS = [
    {
        title: 'Home',
        href: '#top',
    },
    {
        title: 'Projects',
        href: '#projects',
    },
    {
        title: 'About',
        href: '#about',
    },
    {
        title: 'Contact',
        href: '#contact',
    },
]

const SOCIAL_LINKS = [
    {
        component: Icons.github,
        title: 'github',
        href: 'https://github.com/joruizdev',
        icon: 'github.svg'
    },
    {
        component: Icons.linkedin,
        title: 'linkedin',
        href: 'https://www.linkedin.com/in/jose-ruiz-7b5b3b1b3/',
        icon: 'linkedin.svg'
    }
]
---
  <input type='checkbox' id='menu' hidden class='peer' />
  <label
      for='menu'
      class=' w-14 h-14  flex items-center justify-center bottom-4 xl:relative z-50 xl:hidden peer-checked:[&>.first]:hidden peer-checked:[&>.last]:block cursor-pointer transition hover:border-white'
    >
    <MenuIcon />
  </label>

    <nav
		id='navbar'
		class='min-h-screen last fixed top-0 left-0 pointer-events-none opacity-0 peer-checked:opacity-100 peer-checked:pointer-events-auto right-0 z-40 flex py-12 px-8 bg-black/30 backdrop-blur-lg xl:bg-transparent text-center xl:opacity-100 xl:hidden xl:pointer-events-auto xl:min-h-0 xl:relative xl:px-0 justify-center flex-col xl:backdrop-blur-0 xl:mt-1 transition-opacity xl:transition-all'
	>
		<ul class='flex flex-col gap-y-8 mb-20'>
			{
				NAVIGATION_LINKS.map(({ title, href }) => {
					return (
						<li class="text-[#00ADB5] text-xl font-semibold">
              <a href={href}>{title}</a>
						</li>
					)
				})
			}
		</ul>
    <ul class="flex justify-center items-center gap-4">
      {
        SOCIAL_LINKS.map(({component: Icon, href}) => {
          return (
          <li class="border border-[#00ADB5] hover:border-stone-900 hover:bg-stone-100  w-8 h-8 p-1 rounded-full flex items-center justify-center text-[#00ADB5] hover:text-stone-900 transition-all duration-500 ease-in-out">
            <a href={href} target="_blank">
              <Icon />
            </a>
          </li>
          )
        })
      }
  </ul>

	</nav>


  <script type='module'>
    const sections = document.querySelectorAll('main > section')
    const links = document.querySelectorAll('#navbar a')
    
    let direction = 'up'
    let prevYPosition = 0
    
    const setScrollDirection = () => {
      direction =
          document.documentElement.scrollTop > prevYPosition ? 'down' : 'up'
    
      prevYPosition = document.documentElement.scrollTop
    }
    
    const options = {
      root: null,
      threshold: 0,
      rootMargin: '0px'
    }
    
    const getTargetSection = (entry) => {
      const index = sections.findIndex((section) => section === entry.target)
    
      if (index >= sections.length - 1) {
        return entry.target
      } else {
        return sections[index + 1]
      }
    }
    
    const updateLink = (target) => {
      console.log('updateLink', target)
    }
    
    const onIntersect = (entries) => {
      entries.forEach((entry) => {
        if (document.documentElement > prevYPosition) {
          direction = 'down'
        } else {
          direction = 'up'
        }
    
        prevYPosition = document.documentElement.scrollTop
    
        const target =
            direction === 'down' ? getTargetSection(entry) : entry.target
    
        if (shouldUpdate(entry)) {
          updateLink(target)
        }
      })
    }
    
    const shouldUpdate = (entry) => {
      if (direction === 'down' && !entry.isIntersecting) {
        return true
      }
    
      if (direction === 'up' && entry.isIntersecting) {
        return true
      }
    
      return false
    }
    
    const observer = new IntersectionObserver(onIntersect, options)
    
    sections.forEach((section) => {
      observer.observe(section)
    })
    </script>

<script type='module'>
  const menuCheckbox = document.getElementById('menu')
  const mediaQuery = window.matchMedia('(min-width: 1024px)') // Breakpoint lg
  
  const $navbar = document.querySelector('#navbar')
  $navbar.querySelectorAll('a').forEach((anchor) => {
    anchor.addEventListener('click', (_event) => {
      menuCheckbox.checked = false
      if (document.body.style.overflowY === 'hidden') {
        hideOverFlow(false)
      }
    })
  })
  
  /** @param {boolean} value */
  function hideOverFlow (value) {
    document.body.style.overflowY = value ? 'hidden' : 'auto'
  }
  
  menuCheckbox.addEventListener('change', (e) =>
    e.target.checked ? hideOverFlow(true) : hideOverFlow(false)
  )
  
  mediaQuery.addEventListener('change', (e) => {
    if (e.matches) {
      hideOverFlow(false)
      menuCheckbox.checked = false
    }
  })
  </script>